@model IEnumerable<ChatApp.Models.ChatMessage>
@{
    ViewData["Title"] = "Chat Room";
    var currentRoom = ViewBag.Room as string ?? "general";
    var currentUser = User?.Identity?.Name;
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    var currentUserFullName = User.FindFirst("FirstName")?.Value + " " + User.FindFirst("LastName")?.Value;
}

<!-- Hidden data attributes for ChatManager -->
<div id="chat-context"
     data-current-user="@currentUser"
     data-current-user-id="@currentUserId"
     data-current-user-fullname="@currentUserFullName"
     data-room="@currentRoom"
     style="display: none;"></div>

<div class="row">
    <div class="col-md-9">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Chat Room: @currentRoom.ToUpper()</h5>
                <span id="connectionStatus" class="badge bg-secondary">Connecting...</span>
            </div>
            <div class="card-body">
                <div id="messagesList" class="chat-container">
                    @foreach (var message in Model)
                    {
                        var isOwnMessage = message.SenderName == currentUserFullName;
                        <div class="message @(isOwnMessage ? "own" : "other")" data-message-id="@message.Id">
                            <div class="message-header">
                                <strong>@message.SenderName</strong> - @message.Timestamp.ToString("HH:mm")
                            </div>
                            <div class="message-content">@message.Message</div>
                        </div>
                    }
                </div>

                <div class="input-group">
                    <input type="text" id="messageInput" class="form-control" placeholder="Type your message..." maxlength="1000" />
                    <button class="btn btn-primary" type="button" id="sendButton">Send</button>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Online Users</h6>
            </div>
            <div class="card-body">
                <div id="usersList" class="online-users">
                    <div class="text-muted">Loading users...</div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/chat-common.js"></script>
    <script>
        // Page-specific overrides or extensions can go here if needed
        document.addEventListener('DOMContentLoaded', function () {
            // Set user context from hidden elements
            if (window.chatManager) {
                const contextElement = document.getElementById('chat-context');
                if (contextElement) {
                    chatManager.currentUser = contextElement.getAttribute('data-current-user');
                    chatManager.currentUserId = contextElement.getAttribute('data-current-user-id');
                    chatManager.currentUserFullName = contextElement.getAttribute('data-current-user-fullname');
                    chatManager.currentRoom = contextElement.getAttribute('data-room');
                }
            }
        });
    </script>
}

<style>
    .chat-container {
        height: 70vh;
        overflow-y: auto;
        border: 1px solid #ddd;
        padding: 15px;
        background-color: #f8f9fa;
    }

    .message {
        margin-bottom: 15px;
        padding: 10px 15px;
        border-radius: 18px;
        max-width: 70%;
        position: relative;
    }

        .message.own {
            background-color: #007bff;
            color: white;
            margin-left: auto;
            text-align: right;
        }

        .message.other {
            background-color: #e9ecef;
            color: #333;
        }

    .message-header {
        font-size: 0.8em;
        opacity: 0.8;
        margin-bottom: 5px;
    }

    .message-content {
        margin-bottom: 5px;
    }

    .user-item {
        padding: 8px 0;
        border-bottom: 1px solid #eee;
    }

        .user-item.offline {
            opacity: 0.6;
        }

    .online-users {
        height: 70vh;
        overflow-y: auto;
    }
</style>